#! /bin/bash
PATH=/opt/vim/bin:/opt/python2/bin:/opt/green/bin:/opt/docker/bin:/opt/boot/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/bin:/usr/sbin:/opt/boot/bin

# help
if [ $# -lt 2 ]
then
    echo "argumenti su:   ./greenbox_db_create  [DOCKER_CT] [PORT]"
    echo "npr: ./greenbox_db_create F18-db-rudze-dobavljaci 54325"
    echo "remote execute"
    echo "ssh  docker@srv1bout bash  -s -- < greenbox_db_create  f18-demo4 54322"
    exit
fi

SERVICE=$1
ZPOOL=green/db
ZDATASET=$ZPOOL/$SERVICE/F18
ZQUOTA=50G
VOLUME_BASE=/$ZDATASET
DOCKER_IMAGE=bjasko/postgresql
DOCKER_PORT=$2
RUNNING=$(docker inspect --format="{{ .State.Running }}" $SERVICE 2> /dev/null)
PCHECK=$(docker ps | grep -ic $DOCKER_PORT)
ZCHECK=$(sudo zfs list | grep -ic $ZDATASET)
POOLCHECK=$(sudo zfs list | grep -ic $ZPOOL)

if [ $? -eq 1 ]; then
    echo "$SERVICE CT nije pokrenut idem dalje......"
fi
if [ "$RUNNING" == "true" ]; then
    echo "$SERVICE CT je već pokrenut, provjeri konfiguraciju...."
    exit 0
fi

if [ $PCHECK -gt 0 ]; then
    echo "CT port $DOCKER_PORT je već zauzet, provjeri konfiguraciju, izlazim ....."
    exit 0
else
    echo "CT port $DOCKER_PORT nije zauzet nastavljam ....."
fi


if [ $POOLCHECK -gt 0 ]; then
    echo "ZFS dataset $ZPOOL postoji,nastavljam ....."
else
    echo "ZFS dataset $ZPOOL ne postoji, kreiram ga ....."
    sudo zfs create -o recordsize=8K -o primarycache=metadata -o logbias=throughput $ZPOOL
fi

if [ $ZCHECK -gt 0 ]; then
    echo "ZFS dataset $ZDATASET postoji, provjeri, izlazim ....."
    exit
else
    echo "ZFS dataset $ZDATASET ne postoji, kreiram ga ....."
    sudo zfs create   $ZPOOL/$SERVICE
    sudo zfs create -o quota=$ZQUOTA -o mountpoint=$VOLUME_BASE  $ZDATASET
fi

ZMOUNTCHECK=$(zfs get mounted $ZDATASET | awk 'NR==2' | awk '{print $3}')
if [ $ZMOUNTCHECK == "yes" ]; then
    echo "$ZDATASET je mountan nastavljam...."
else
    echo "$ZDATASET izgleda nije mountan, izlazim ....."
    exit
fi

echo "Sve izgleda OK, kreiram CT  $SERVICE"
docker rm -f $SERVICE
docker run --name $SERVICE -itd \
-v $VOLUME_BASE/lib:/var/lib/postgresql \
-v $VOLUME_BASE/etc:/etc/postgresql \
-v $VOLUME_BASE/log:/var/log/postgresql \
-e 'PG_PASSWORD=password' \
-p $DOCKER_PORT:5432 \
$DOCKER_IMAGE


# čekam da se DB servis podigne
(docker logs -f $SERVICE &) | grep -q "database system is ready to accept connections"

echo "==== init sql role/user===="
echo  "create role xtrole;" | docker exec -i $SERVICE  psql -U postgres
echo  "create role admin password 'boutpgmin' login in group xtrole;" | docker exec -i $SERVICE  psql -U postgres


exit
